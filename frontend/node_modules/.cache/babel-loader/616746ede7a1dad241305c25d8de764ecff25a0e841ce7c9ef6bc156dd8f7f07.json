{"ast":null,"code":"var _jsxFileName = \"/Users/ameyajadhav/Documents/Projects/proper-noun-correction/frontend/src/components/AudioInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioInput = ({\n  onTranscription\n}) => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    setMediaRecorder(recorder);\n    recorder.start();\n    setRecording(true);\n    const chunks = [];\n    recorder.ondataavailable = e => chunks.push(e.data);\n    recorder.onstop = async () => {\n      const blob = new Blob(chunks, {\n        type: 'audio/wav'\n      });\n      const formData = new FormData();\n      formData.append('file', blob, 'recording.wav');\n      try {\n        const response = await axios.post('http://localhost:8000/transcribe', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        onTranscription(response.data.transcription);\n      } catch (error) {\n        console.error('Transcription error:', error);\n      }\n    };\n  };\n  const stopRecording = () => {\n    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n    setRecording(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: recording ? stopRecording : startRecording,\n      children: recording ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioInput, \"KvbLPgHxh+4EihMpLe4HwwYIr2o=\");\n_c = AudioInput;\nexport default AudioInput;\nvar _c;\n$RefreshReg$(_c, \"AudioInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AudioInput","onTranscription","_s","recording","setRecording","mediaRecorder","setMediaRecorder","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","start","chunks","ondataavailable","e","push","data","onstop","blob","Blob","type","formData","FormData","append","response","post","headers","transcription","error","console","stopRecording","stop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ameyajadhav/Documents/Projects/proper-noun-correction/frontend/src/components/AudioInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AudioInput: React.FC<{ onTranscription: (text: string) => void }> = ({\n  onTranscription,\n}) => {\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | null>(\n    null\n  );\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    const recorder = new MediaRecorder(stream);\n    setMediaRecorder(recorder);\n    recorder.start();\n    setRecording(true);\n\n    const chunks: Blob[] = [];\n    recorder.ondataavailable = (e) => chunks.push(e.data);\n    recorder.onstop = async () => {\n      const blob = new Blob(chunks, { type: 'audio/wav' });\n      const formData = new FormData();\n      formData.append('file', blob, 'recording.wav');\n\n      try {\n        const response = await axios.post(\n          'http://localhost:8000/transcribe',\n          formData,\n          {\n            headers: { 'Content-Type': 'multipart/form-data' },\n          }\n        );\n        onTranscription(response.data.transcription);\n      } catch (error) {\n        console.error('Transcription error:', error);\n      }\n    };\n  };\n\n  const stopRecording = () => {\n    mediaRecorder?.stop();\n    setRecording(false);\n  };\n\n  return (\n    <div>\n      <button onClick={recording ? stopRecording : startRecording}>\n        {recording ? 'Stop Recording' : 'Start Recording'}\n      </button>\n    </div>\n  );\n};\n\nexport default AudioInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAiE,GAAGA,CAAC;EACzEC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAChD,IACF,CAAC;EAED,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC1CF,gBAAgB,CAACO,QAAQ,CAAC;IAC1BA,QAAQ,CAACE,KAAK,CAAC,CAAC;IAChBX,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMY,MAAc,GAAG,EAAE;IACzBH,QAAQ,CAACI,eAAe,GAAIC,CAAC,IAAKF,MAAM,CAACG,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC;IACrDP,QAAQ,CAACQ,MAAM,GAAG,YAAY;MAC5B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACP,MAAM,EAAE;QAAEQ,IAAI,EAAE;MAAY,CAAC,CAAC;MACpD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,EAAE,eAAe,CAAC;MAE9C,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAI,CAC/B,kCAAkC,EAClCJ,QAAQ,EACR;UACEK,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CACF,CAAC;QACD7B,eAAe,CAAC2B,QAAQ,CAACR,IAAI,CAACW,aAAa,CAAC;MAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;EACH,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B7B,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE8B,IAAI,CAAC,CAAC;IACrB/B,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA;IAAAqC,QAAA,eACErC,OAAA;MAAQsC,OAAO,EAAElC,SAAS,GAAG+B,aAAa,GAAG3B,cAAe;MAAA6B,QAAA,EACzDjC,SAAS,GAAG,gBAAgB,GAAG;IAAiB;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvC,EAAA,CAjDIF,UAAiE;AAAA0C,EAAA,GAAjE1C,UAAiE;AAmDvE,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}